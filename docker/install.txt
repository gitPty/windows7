#进入/etc/yum.repo.d/
wget https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/docker-ce.repo
 ls docker-ce.repo 
 #在此处将源替换为清华大学源
 vim docker-ce.repo 
 #之后用替换语句:
 :%@https://docker.com@https://mirrors.tuna.tsinghua.edu.cn/docker-ce@
 #以@为分隔符,前半部分是要替换的语句,后面是替换成什么.
 yum repolist
 yum install docker-ce   狂点y,4.127出不去,99.64
 安装后使用docker version  /  docker info查看状态
 
 
 
 
 #编辑daemon.json文件,配置docker加速器
 mkdir /etc/docker
 vim /etc/docker/daemon.json
 #查看当前docker代理信息
 systemctl show --property=Environment docker
 #创建docker专用代理,因为本地网络出不去使用代理
 mkdir -p /etc/systemd/system/docker.service.d
 vim /etc/systemd/system/docker.service.d/https-proxy.conf 
#编辑该代理配置文件. 
[Service]
Environment="HTTP_PROXY=http://10.134.99.64:66"
#注意此处不要用https,不然会有那个tsl信息警告无法连接.
#刷新配置,重启docker
systemctl daemon-reload
 systemctl restart docker
 
 #配置好代理后查看是否可以从docker.hub拉取镜像文件
 
 docker search nginx
 docker pull nginx:1.14-alpine

 
 1098  docker image ls
 #busybox是个专用伪装的,kernel+java.exe+busybox~安卓
 1099  docker image pull busybox:latest
 1100  docker image ls
 1101  docker ps
 1102  docker ps -a
 1103  docker image ls
 1104  docker image ls --help
 1105  docker image ls --no-trunc
 1106  docker container --help
 
 
 #查看网络
 1110  docker network
 1111  docker network ls
 1112  ip a
 
 
 #如果不指定latest标签,默认是最新的
 docker run --name b1 -it busybox
 1113  docker run --name b1 -it busybox:latest
 
 
 
 #alpine为最小化的版本
 docker run --name web1 -d nginx:1.14-alpine
 1114  docker ps -a
 1115  docker exec -it b1
 1116  docker exec -it b1 /bin/sh
 1117  docker ps -a
 1118  docker start b1

 
 
 #此处kill与stop的区别为sigmoid不同,kill -9,stop -15
 1122  docker stop b1
 1059  docker stop dd16560ac9b4 #根据id号关闭
 1060  docker stop web1			#根据名称关闭


 
 #绕过容器边界进入容器,并使用/bin/sh
 1127  docker exec -it b1  /bin/sh

 
 #直接进入shell,不绕过
 1131  docker start -ai b1

 
 #查看容器信息
 1134  docker inspect web1
 
 
 #查看docker中运行的服务状态,在此之前因为默认172.17网路,故先在环境变量里关闭宿主机的代理
 1135  curl 172.17.0.2
 1136  curl 127.0.0.1
 1137  docker ps -a
 
 #查看宿主机环境变量,并在当前控制台设置临时失效,可以多开控制台进行测试.
 1138  env
 1139  unset http_proxy
 1140  unset https_proxy
 1141  env
 
 
 1142  docker ps -a
 1143  docker inspect web1 |grep 80
 1144  docker inspect web1 |grep IP
 1145  curl 172.17.0.2
 
 重新使用环境变量.
 1146  source /etc/profile
 
 
 #测试
 1147  env
 1148  unset http_proxy
 1149  unset https_proxy
 1150  curl 172.17.0.2
 1151  curl 172.17.0.3
 1152* curl 10.134.196.2
 1153  curl 172.17.0.2

#运行docker,如果本地没有镜像文件,会自动走代理拉取
docker run --name kvstor1 -d redis:3.3-alpine
-d选项是detach, 在当前控制台的后台运行,不进入交互式界面.
 #从指定仓库拉取特定文件.
 docker pull quay.io/coreos/flannel:v0.10.0-amd64
 #为启动并自我修改后的容器制作一个镜像模板,并上传到dockerhub
 #-p是停止容器t1,防止提交过程中发生改变,后面的是名字和版本定义的标签名.
 docker commit -p t1 dockerptu/httpd:latest

 #docker打标签tag,为镜像指明标签名仓库名,要指明ID号
 1003  docker tag d68e6feafbbc mageedu/bbox_httpd
 1004  docker tag d68e6feafbbc mageedu/bbox_httpd:v0.1-1
  #此处为已有标签新增一个后面内容(mageedu/bbox_httpd:latest2)的标签
 1006  docker tag mageedu/bbox_httpd:v0.1-1 mageedu/bbox_httpd:latest2

 1009  docker image rm mageedu/bbox_httpd:latest
 1015  docker run --name t1 -it mageedu/bbox_httpd:v0.1-1
 
 #完成一个镜像的修改-p是停止b1容器,防止提交过程中发生改变,-c是传命令CMD大写,直接在镜像内运行httpd,-a是作者名
docker commit -a "mageedu <mageedu.com>" -c 'CMD ["/bin/httpd","-f","-h","/data/html"]' -p b1 mageedu/httpd:v0.2
	docker run --name t2  mageedu/httpd:v0.2
	
	
#如何完成本地上传至dockerhub内,先注册一个hub账号,宿主机运行docker login,不指定服务器则默认为dockerhub
 1018  docker login -u dockerptu	#这个是我注册的user账号,hashcode:99~
 输入后直接登录
 
 #dockerhub上建立一个仓库命名为httpd,真正仓库名为user/httpd
#本地也要有一个user/httpd这种仓库名的文件才能实现push操作,pushed之后可以再hub上看到了
 1028  docker push dockerptu/httpd
 docker logout

 #在阿里yun上建立仓库,登录阿里云,进入"管理控制台选项"
 在宿主机登录aliyun
 docker login --username=雅宝斯巴鲁斯 registry.cn-shenzhen.aliyuncs.com	#hashcode:99~
 #修改要上传文件的标签{仓库名+(标签名)}为aliyun的命名空间+仓库名registry.cn-shenzhen.aliyuncs.com/dockerptu/httpd
 docekr tag mageedu/httpd:v0.2 registry.cn-shenzhen.aliyuncs.com/dockerptu/httpd:v0.2
 #上传
 docker push registry.cn-shenzhen.aliyuncs.com/dockerptu/httpd:v0.2
 
 #近端主机之间通信测试镜像完好则使用scp拷贝打包文件
 docker save -o myimages.gz mageedu/bbox_httpd:v0.1-1 mageedu/httpd:v0.2	#打包镜像
 scp myimages.gz docker02:/root/
 #在docker02上运行load -i,直接从压缩文件中读取该镜像,然后直接run
docker load -i myimages.gz
 
 ####################################
 ##########DockerFile文件使用########
 ################################3####
 
 #查看b1资料
 442  docker inspect b1
 启动b1,相当于exited后重启进入,不用exec -it模式
  443  docker start -ia b1
  444  docker exec -it b1 /bin/sh
  
  
  提交镜像:
  445  docker commit  -p b1 
  446  docker image ls
  447  dockr tag --help
  #为镜像指明标签名仓库名
  448  docker tag d68e6feafbbc mageedu/bbox_httpd
  449  docker tag d68e6feafbbc mageedu/bbox_httpd:v0.1-1
  450  docker image ls
  451  docker tag mageedu/bbox_httpd:v0.1-1 mageedu/bbox_httpd:latest2
  452  docker image ls
  
  #删除镜像
  453  docker image rm mageedu/httpd:latest
  454  docker image rm mageedu/bbox_httpd:latest
  455  docker image ls
  456  docker inspect busybox
  457  docker inspect nginx:1.14-alpine
  458  docker image ls
  459  docker inspect mageedu/bbox_httpd:v0.1-1
  460  docker run --name t1 -it mageedu/bbox_httpd:v0.1-1
  461  
  
  
  docker commit --help
  462  docker commit -a "mageedu <mageedu.com>" -c 'CMD ["/bin/httpd","-f","-h","/data/html"]' -p b1 mageedu/httpd:v0.2
  463  docker imagels
  464  docker image ls
  465  docker run --name t2  mageedu/httpd:v0.2
  475  docker inspect web1
  476  docker container inspect web1
  477  docker container inspect b1
  478  docker container inspect t1
  
  
  518  docker ps -a
  519  docker inspect t1
  
  
  #安装后使用docker
  524  wget https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/docker-ce.repo
  525  ls docker-ce.repo 
  526  vim docker-ce.repo 
  528  yum install docker-ce
  529  vim /etc/docker/daemon.json
  531  mkdir /etc/docker
  532  vim /etc/docker/daemon.json
  533  systemckl start docker
  534  systemctl start docker
  535  docker
  536  docker container --help
  537  docker version
  538  docker info
  540  docker pull nginx:1.14-alpine
  541  vim /etc/docker/daemon.json 
  
  574  vim /etc/docker/daemon.json
  576   systemctl restart docker
  577  docker search nginx
  578  vim /etc/docker/daemon.json
  579  docker info
  580  curl https://index.docker.io/v1/
  582  vim /etc/docker/daemon.json
  583  cd /etc/docker/
  587  service docker restart
  #网络搜索redis镜像及nginx镜像
  588  docker search redis
  589  docker search centos
  
  
  593  vim docker-ce.repo 
  595  docker info
  596  mkdir -p /etc/systemd/system/docker.service.d
  597  cat  > /etc/systemd/system/docker.service.d/https-proxy.conf <<EOF
  601  vim /etc/systemd/system/docker.service.d/https-proxy.conf 
  603  systemctl restart docker
  605  systemctl show --property=Environment docker
  606  docker info
  607  docker search nginx
  608  vim /etc/systemd/system/docker.service.d/https-proxy.conf 
  610  systemctl restart docker
  611  docker info
  612  docker search nginx
  613  vim /etc/systemd/system/docker.service.d/https-proxy.conf 
  615  systemctl restart docker
  616  docker info
  617  docker search nginx
  618  docker pull nginx
  620  vim /etc/systemd/system/docker.service.d/https-proxy.conf 
  622  systemctl restart docker
  623  docker search nginx
  624   docker pull nginx:1.14-alpine
  625  docker image ls
  #拉镜像
  626  docker image pull busybox:latest
  627  docker image ls
  
  
  #全名显示不截断
  632  docker image ls --no-trunc
  
  
  633  docker container --help
  634  docker ps
  635  docker container ls
  636  docker run --help
  637  docker network
  638  docker network ls
  640  docker run --name b1 -it busybox:latest
  641  docker ps -a
  642  docker exec -it b1
  643  docker exec -it b1 /bin/sh
  644  docker ps -a
  645  docker start b1
  646  docker exec --help
  647  docker exec -it b1 /bin/sh

  658  docker start -ai b1
  660  docker ps
  661  docker inspect web1

  670  docker inspect web1 |grep 80
  671  docker inspect web1 |grep IP
  686  scp cat.sh docker02:/root/
  694  docker run --help
  697  docker ps

  712  docker run --name web1 -d nginx:1.14-alpine
 
  723  docker inspect b1
  725  docker network ls
  726  docker exec -it b1 /bin/sh

  742  docker run --name kvstor1 -d redis:3.3-alpine
  743  docker run --name kvstor1 -d redis:3.4-alpine
  744  docker run --name kvstor1 -d redis:4-alpine
  745  docker search redis:4-alpine
  746  docker run --name kvstor1 -d redis:4-alpine
  747  docker ps
  748  docker exec --help
  749  docker exec -it kvstor1 /bin/sh
  750  docker logs
 
  752  docker logs web1
  753  docker pull quay.io/coreos/flannel:v0.10.0-amd64
  754  docker image ls
  755  docker ps
  756  docker stop dd16560ac9b4 
  757  docker stop web1
  
  761  docker run --name b1 -it busybox 
 
  768  docker ps -a
  770  docker stop t2
  771  docker network ls
  775  docker ps -a
  776  docker start t1
  777  docker exec -it t1 /bin/sh
 
  779  systemctl start docker
 
  782  systemctl enable docker
  7
  785  docker -H 10.150.7.55:2375 ps
  790  systemctl status docker
  791  docker -H 10.150.7.55:2375 ps
  795  docker -H 10.150.7.55:2375 ps
  796  systemctl status docker
  798  vim /etc/systemd/system/multi-user.target.wants/docker.service 
  800  vim /etc/systemd/system/multi-user.target.wants/docker.service 
  956  vim /etc/docker/daemon.json
 1006   history |grep docker
 1007  docker exec --help
 1012  docker ps 
 1013  docker exec -it tinyweb2 /bin/sh
 1014  docker stop tinyweb2
 1018  docker kill tinyweb2
 1019  docker inspect tinyhttpd:v0.2-6
 1022  docker inspect tinyhttpd:v0.2-6
 1023  docker inspect tinyhttpd:v0.2-7
 1027  docker image ls
 1028  docker
 1029  docker container --help
 
 #使用dockerfile文件作为模板建立images
 1046  docker bulid -h
 1047  docker build -h
 1048  docker build ./ -t tinyhttpd:v0.1-1
 1049  docker login
 1050  docker ps -a
 1051  docker image ls
 1052  docker build ./ -t tinyhttpd:v0.1-1
 1054  docker build ./ -t tinyhttpd:v0.1-1
 1055  docker image ls
 1056  docker run --name tinyweb1 --rm tinyhttpd:v0.1-1 cat /data/web/html/index.html
 
 #建立images并标注
 1063  docker build -t tinyhttpd:v0.1-2 ./
 
 #--rm是为了ctrl+D退出时顺便关闭容器
 1064  docker run --name tinyweb1 --rm tinyhttpd:v0.1-2 ls /etc/yum.repos.d/
 1066  docker build -t tinyhttpd:v0.1-3 ./
 1067  docker run --name tinyweb1 --rm tinyhttpd:v0.1-3 ls /usr/local/src
 1071  docker build -t tinyhttpd:v0.1-4 ./
 #建立容器并传输命令给容器
 1072  docker run --name tinyweb1 --rm tinyhttpd:v0.1-4 ls /usr/local/src
 1073  docker run --name tinyweb1 --rm tinyhttpd:v0.1-4 ls /usr/local/src/nginx-1.15.2
 1075  docker build -t tinyhttpd:v0.1-5 ./
 
 
 1076  docker run --name tinyweb1 --rm tinyhttpd:v0.1-5 mount 
 1077  docker run --name tinyweb1 --rm tinyhttpd:v0.1-5 sleep 60
 1079  docker build -t tinyhttpd:v0.1-6 ./
 1080  docker run --name tinyweb1 --rm tinyhttpd:v0.1-6 /bin/httpd  -f -h /data/web/html
 1081  docker run --name tinyweb1 --rm -P tinyhttpd:v0.1-6 /bin/httpd  -f -h /data/web/html
 1082  docker build -t tinyhttpd:v0.1-7 ./
 1084  docker build -t tinyhttpd:v0.1-7 ./
 1086  docker build -t tinyhttpd:v0.1-7 ./
 1089  docker build -t tinyhttpd:v0.1-8 ./
 1097  docker build -t tinyhttpd:v0.1-8 ./
 1099  docker build -t tinyhttpd:v0.1-7 ./
 1101  docker build -t tinyhttpd:v0.1-7 ./
 1103  docker build -t tinyhttpd:v0.2-7 ./
 1106  docker build -t tinyhttpd:v0.2-7 ./
 1107  docker image ls
 1109  docker run --name tinyweb1 --rm -P tinyhttpd:v0.2-7 ls /usr/local/src/
 1110  docker run --name tinyweb1 --rm -P tinyhttpd:v0.2-7 ls /usr/local/src/nginx-1.15.2
 1111  docker run --name tinyweb1 --rm -P tinyhttpd:v0.2-7 ls /data/web/html
 1112  docker run --help
 1113  docker build -h
 1114  docker run --name tinyweb1 --rm -P tinyhttpd:v0.2-7 printenv
 1115  docker run --name tinyweb1 --rm -P -e WEB_SERVER_PACKAGE="nginx-1.15.1" tinyhttpd:v0.2-7 printenv
 1116  docker run --name tinyweb1 --rm -P -e WEB_SERVER_PACKAGE="nginx-1.15.1" tinyhttpd:v0.2-7 printenv && ls /usr/local/src
 1117  docker run --name tinyweb1 --rm -P -e WEB_SERVER_PACKAGE="nginx-1.15.1" tinyhttpd:v0.2.7 ls /usr/local/src
 1118  docker run --name tinyweb1 --rm -P -e WEB_SERVER_PACKAGE="nginx-1.15.1" tinyhttpd:v0.2-7 ls /usr/local/src
 1120  docker build -t tinyhttpd:v0.1-8 ./
 1121  docker run --name tinyweb1 --rm -P -e WEB_SERVER_PACKAGE="nginx-1.15.1" tinyhttpd:v0.1-7 
 1122  docker ps -a
 1123  docker run --name tinyweb1 --rm -P -e WEB_SERVER_PACKAGE="nginx-1.15.1" -it tinyhttpd:v0.1-7 
 1125  docker build -t tinyhttpd:v0.1-8 ./
 1126  docker run --name tinyweb1 --rm -P -e WEB_SERVER_PACKAGE="nginx-1.15.1" -it tinyhttpd:v0.1-8 
 1127  docker ps -a
 1129  docker build -t tinyhttpd:v0.1-9 ./
 1130  docker ps -a
 1131  docker run --name tinyweb1 --rm -P -e WEB_SERVER_PACKAGE="nginx-1.15.1" -it tinyhttpd:v0.1-9 ls /usr/local/src 
 1136  docker build -t tinyhttpd:v0.2-1 ./
 1138  docker build -t tinyhttpd:v0.2-1 ./
 1140  docker build -t tinyhttpd:v0.2-1 ./
 1142  docker image inspect tinyhttpd:v0.2-1
 1143  docker run --name tinyweb2 -it --rm -P tinyhttpd:v0.2-1
 1145  docker build -t tinyhttpd:v0.2-2 ./
 1146  docker image inspect tinyhttpd:v0.2-2
 1148  docker build -t tinyhttpd:v0.2-2 ./
 1149  docker image inspect tinyhttpd:v0.2-2
 1150  docker run --name tinyweb2 -it --rm -P tinyhttpd:v0.2-1
 1151  docker run --name tinyweb2 -it --rm -P tinyhttpd:v0.2-2
 1153  docker build -t tinyhttpd:v0.2-3 ./
 1154  docker rm tinyweb2
 1155  docker run --name tinyweb2 -it --rm -P tinyhttpd:v0.2-3
 1157  docker build -t tinyhttpd:v0.2-3 ./
 1158  docker run --name tinyweb2 -it --rm -P tinyhttpd:v0.2-3
 1159  docker ps -a
 1160  docker run --name tinyweb2 -it -P tinyhttpd:v0.2-3
 1161  docker ps -a
 1164  docker log tinyweb2
 1165  docker kill tinyweb2
 1166  docker logs tinyweb2
 1168  docker build -t tinyhttpd:v0.2-4 ./
 1169  docker rm tinyweb2
 1170  docker run --name tinyweb2 -it -P -- rm  tinyhttpd:v0.2-4
 1171  docker run --name tinyweb2 -it -P --rm  tinyhttpd:v0.2-4
 1172  docker ps -a
 1174  docker run --name tinyweb2 -it -P --rm  tinyhttpd:v0.2-4 
 1176  docker build -t tinyhttpd:v0.2-5 ./
 1177  docker run --name tinyweb2 -it --rm -P tinyhttpd:v0.2-5
 1178  docker run --name tinyweb2 -it --rm -P tinyhttpd:v0.2-5 ls /data/web/html
 1179   docker run -h
 1180   docker run --help
 
 #-P暴露端口给宿主机,使得外部主机可以访问
 1181  docker run --name tinyweb2 -it --rm -P --entrypoint "ls /data" tinyhttpd:v0.2-5 
 1182  docker run --name tinyweb2 -it --rm -P --entrypoint "/bin/ls /" tinyhttpd:v0.2-5 
 1184  docker build -t tinyhttpd:v0.2-6 ./
 1185  docker build -t tinyhttpd:v0.2-7 ./
 1186  docker run --name tinyweb2 -it --rm -P tinyhttpd:v0.2-7
 1187  docker run 
 1188  docker run --name tinyweb2 -it  -P tinyhttpd:v0.2-7
 1189  docker ps -a
 1190  docker rm tinyweb2
 1191  docker run --name tinyweb2 -it  -P tinyhttpd:v0.2-7 ls /data
 1192  docker rm tinyweb2
 1193  docker run --name tinyweb2 -it  -P tinyhttpd:v0.2-7 "ls /data"
 1210  dockere inspect tinyweb1
 1211  docker inspect tinyweb1
 1212  dockere inspect tinyweb1
 1213  docker inspect tinyweb1
 
 
 #查看端口信息
 1222  docker port tinyweb1
 1223  docker kill tinyweb1
 1224  docker port tinyweb1
 1225  vim /etc/docker/daemon.json
 1229  docker kill tinyweb1
 1239  docker image ls
 1253  docker run --name -nginx -it nginx:1.14-alpine /bin/sh
 1254  docker run --name nginx1 -it nginx:1.14-alpine /bin/sh
 1257  docker run --name nginx1 -it nginx:1.14-alpine /bin/sh
 1258  docker rm nginx1
 1259  docker kill  nginx1
 1260  docker rm nginx1
 1261  docker run --name nginx1 -it nginx:1.14-alpine /bin/sh
 1262  docker rm ngixn1
 1263  docker rm nginx1
 1265  docker run --name myweb1 --rm -P myweb:v0.3-1
 1266  docker run --name myweb1 --rm -P myweb:v0.3-2
 1267  docker run --name myweb1 --rm -P myweb:v0.3-2 "ls /bin"
 1270  docker run --name myweb1 --rm -P myweb:v0.3-4
 1279  docker image ls
 1282  docker  build -t myweb:v0.3-1 ./
 1284  docker  build -t myweb:v0.3-1 ./
 1287  docker  build -t myweb:v0.3-2 ./
 1291  docker  build -t myweb:v0.3-4 ./
 1292  docker ps -a
 1294  docker  build -t myweb:v0.3-3 ./
 1296  docker ps  -a
 1298  docker  build -t myweb:v0.3-5 ./ 
 1302  docker  build -t myweb:v0.3-6 ./ 
 1305  docker kill myweb1
 1307  docker exec myweb1 /bin/sh
 1308  docker exec -it myweb1 /bin/sh
 1310  docker run --name myweb1 --rm -P myweb:v0.3-4
 1311  docker run --name myweb1 --rm -P myweb:v0.3-3
 1312  docker run --name myweb1 --rm -P -it myweb:v0.3-4 /bin/sh
 1313  docker run --name myweb1 --rm -P -it myweb:v0.3-3 /bin/sh
 1314  docker run --name myweb1 --rm -P  myweb:v0.3-5 
 1315  docker run --name myweb1 --rm -P  myweb:v0.3-6 
 1349  cp \\docker02
 1350  scp /etc/sysconfig/modules/ipvs.modules root@docker02:/etc/sysconfig/modules/
 1351  cp /etc/sysconfig/modules/ipvs.modules root@docker02:/etc/sysconfig/modules/
 1352  scp /etc/sysconfig/modules/ipvs.modules root@docker02:/etc/sysconfig/modules/
 1407  ping docker02
 1434  docker info
 1435  ll /etc/docker/daemon.json
 1436  cat /etc/docker/daemon.json
 1438  docker run
 1439  vim /usr/lib/systemd/system/docker.service 
 1441  vim /usr/lib/systemd/system/docker.service 
 1443  systemctl start docker
 1446  systemctl start docker
 1448  docker info
 1451  docker info
 1452  vim /usr/lib/systemd/systemdocker.
 1453  vim /usr/lib/systemd/system/docker.service 
 1455  systemctl start docker
 1456  docker info
 1457  vim /usr/lib/systemd/system/docker.service 
 1464  scp /etc/sysctl.d/k8s.conf  docker02:/etc/sysctl.d/
 1467  scp ~/.ssh/id_rsa.pub docker02:~/.ssh/
 1468  scp ~/.ssh/id_rsa.pub docker02:/root/.ssh/
 1470  scp .ssh/id_rsa.pub docker02:/root
 1485  ssh root@docker02
 1492  scp test.txt docker02:~
 1494  scp -P 2220 docker02:~/p.sh .
 1495  scp -P 22 docker02:~/p.sh .
 1497  scp test1 docker02:~/.ssh/
 1498  scp test1 docker02:/tmp
 1616  docker login
 1618  https://docs.docker.com/engine/reference/commandline/login/#credentials-store
 1619  docker pull  dockerptu/httpd
 1620  docker pull  dockerptu/httpd:v0.3
 1621  docker image ls
 1624  kubectl run myapp --image=dockerptu/httpd:v0.3 --replicas=2
 1636  docker image ls
 1638  docker ps -a
 1639  docker container start b1
 1640  docker exec -it b1 /bin/sh
 1641  docker ps -a
 1648  kubectl set image deployment myapp myapp=dockerptu/httpd:v0.3
 1649  kubectl set image deployment myapp myapp=dockerptu/myapp:latest
 1655  push dockerptu/mya
 1694  docker imager ls
 1695  docker image ls
 1696  docker ps -a
 1697  docker start web1
 1698  docker exec -it  web1 /bin/sh
 1771  docker image ls
 1794  docker commit b1 b1:myapp
 1795  docker container ls
 1796  docker image ls
 1797  docker image -h
 1798  docker image rm b1
 1799  docker image rm b1:myapp
 1800  docker ps -a
 1801  docker image ls
 1802  docker commit b1 myapp:latest
 1803  docker image ls
 1804  docker push myapp/latest
 1805  docker push myapp:latest
 1806  docker commit b1 dockerptu/myapp:latest
 1807  docker push docekrptu/myapp
 1808  docker push dockerptu/myapp
 1816  systemctl enable docker
 1818  vim /usr/lib/systemd/system/docker.service 
 1820  systemctl start docker
 1822  docker info
 1824  vim /usr/lib/systemd/system/docker.service 
 1826  systemctl start docker
 1827  docker info 
 1884  scp -P 2220  kubernetes.repo docker02:/etc/yum.repos.d/
 1885  scp  kubernetes.repo docker02:/etc/yum.repos.d/
 1886  scp  kubernetes.repo docker02:/etc/yum.repos.d
 1890  scp test1 docker02:~/.ssh/
 1893  scp test1 docker02:~/.ssh/
 1896  scp test1 docker02:~/.ssh/
 1899  scp test1 docker02:/tmp
 1909  docker info
 1924  docker image list
 1926  docker image list
 1941  docker image ls
 1954  scp admin.conf docker02:/root/.kube/
 1955  scp admin.conf docker02:/root/.kube
 1956  scp admin.conf docker02:/root/.kube/config
 1964  scp /tmp/attrtest docker02:/tmp
 1966  scp /tmp/attrtest docker02:/tmp
 1969  scp /tmp/attrtest docker02:/tmp
 1970  scp admin.conf  docker02:/root/.kube/config
 2009  docker image ls
 2010  docker ps -a
 2011  docker exec b1 -it /bin/sh
 2012  docker exec -it b1 /bin/sh
 2014  docker image ls
 2015  docker ps -a
 2016  docker image ls
 2353  10.150.7.55 docker02
 2358  10.150.7.55 docker02
 2364  10.150.7.55 docker02
 2369  10.150.7.55 docker02
 2476  ssh root@docker02 "cat /root/date.txt"
 2739  docker ps -a
 2762  docker ps -a
 2789  docker image ls
 2950  docker login
 2999  docker image ls
 3000  docker rmi tinny*
 3001  docker rmi tinnyhttpd
 3002  docker rmi tinnyhttpd:v0.1-4
 3003  docker rmi tinyhttpd:v0.1-4
 3004  docker rmi tinyhttpd
 3005  docker rmi tinyhttpd*
 3006  docker rmi tinyhttpd*:*
 3007  docker rmi tiny*
 3008  docker image rm tiny*
 3009  docker image rm tinyhttpd:v0.1-[/d+]
 3010  docker image rm tinyhttpd:v0.1-/d+
 3011  docker image rm tinyhttpd:v0.1-/d
 3012  docker image rm tinyhttpd:v0.1-[/d]
 3013  docker image rm tinyhttpd:v0.1-*
 3014  docker images\
 
 #删除images中标签$3为none的空镜像
 
 3015  docker images |awk '/<none>/{print "docker rmi "$3}'|bash
 3016  docker images |awk '/<none>/'
 3017  docker images |awk 'tiny'
 3018  docker images |awk '/tinyhttpd/'
 3019  docker images |awk 'tinyhttpd'
 3020  docker images |awk '/tinyhttpd/'
 3021  docker images |awk '/tinyhttpd/{print "docker rmi "$3}'|bash
 3022  docker ps -a
 
 #删除'Exited'状态的容器
 
 3023  docker ps -a |grep 'Exited' |awk '{print $3}' |xargs docker stop |xargs docker rm
 3024  docker ps -a |grep 'Exited' |awk '{print $1}' |xargs docker stop |xargs docker rm
 3025  docker ps -a 
 3027  vim docker-rm.txt
 3028  docker images |awk '/<none>/{print "docker rmi "$3}'
 3030  docker images
 3031  docker images |awk '/tinyhttpd/{print "docker rmi "$3}'
 3035  docker images |awk '/tinyhttpd/{print "docker rmi "$3}'|bash
 3045  docker images
 3046  history |grep docker

 
 
 
 